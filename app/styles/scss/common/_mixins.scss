
// === Box ===
@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}

// === Font Face ===
@mixin font($font-name, $path, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($path+".woff2") format("woff2");
    font-weight: $weight;
    font-style: $style;
  }
}

// === Adaptive Font ===
@mixin adaptive-font($pcSize, $mobSize, $maxWidth) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;
  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }
  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}

// === Background ===
@mixin bg($url, $position: center, $fit: cover, $repeat: no-repeat) {
  background: url('../images/' + $url) $position/$fit $repeat;
}

// === Pseudo element ===
@mixin pseudo( $content: '', $position: absolute, $display: inline-block ) {
  content: $content;
  position: $position;
  display: $display;
}

// === Media queries ===
@mixin tablet {
  @media screen and (min-width: $tablet * 1px) {
    @content;
  }
}

@mixin large {
  @media screen and (min-width: $large * 1px) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: $desktop * 1px) {
    @content;
  }
}

// === Fade in/Fade out animation ===
@mixin fade($type) {
  @if $type== "hide" {
    visibility: hidden;
    opacity: 0;
    transition: visibility .6s, opacity .6s;
  } @else if $type== "show" {
    visibility: visible;
    opacity: 1;
    transition: visibility .6s, opacity .6s;
  }
}

// === Fill btn on hover === 
//   Usage: @include background-transition(#4CAF50, #3F51B5);

@mixin background-transition($initial, $hover, $inverted: false) {
  background: linear-gradient(
    90deg,
    $hover 0%,
    $hover 50%,
    $initial 50%,
    $initial 100%
  );
  background-repeat: no-repeat;
  background-size: 200% 100%;

  background-position: right bottom;
  @if $inverted {
    background-position: left bottom;
  }
  transition: background-position 0.25s ease-out;

  &:hover {
    background-position: left bottom;
    @if $inverted {
      background-position: right bottom;
    }
  }
}
